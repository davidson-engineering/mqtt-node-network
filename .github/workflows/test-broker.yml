name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  test_mqtt_broker:
    name: Test on Python ${{ matrix.python-version }} and ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12", "3.13"]

    services:
      emqx:
        image: emqx/emqx:latest
        ports:
          - 1883:1883
          - 8083:8083
        options: >-
          --env EMQX_ALLOW_ANONYMOUS=true
          --env EMQX_HOST=localhost

    steps:
      - uses: actions/checkout@v4

      - name: Install the latest version of uv
        uses: astral-sh/setup-uv@v5
        with:
          version: "latest"

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          uv venv --system
          uv sync --dev

      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          # NOTE -- exit-zero was added here to prevent failing with prometheus_client library
          uv run flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics --exit-zero
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          uv run flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Install netcat-openbsd
        run: sudo apt-get update && sudo apt-get install -y netcat-openbsd

      - name: Wait for EMQX to be ready
        run: |
          for i in {1..30}; do
            nc -z localhost 1883 && echo "EMQX is up" && exit 0
            echo "Waiting for EMQX..."
            sleep 1
          done
          echo "EMQX did not start in time" && exit 1
          
      - name: Test with pytest
        env:
          MQTT_BROKER_HOSTNAME: localhost
          MQTT_BROKER_PORT: 1883
          MQTT_BROKER_USERNAME: ""
          MQTT_BROKER_PASSWORD: ""
        run: |
          uv run pytest
